{
  "info": {
    "name": "Cloud-Native Medical App - E2E Flow",
    "description": "End-to-end testing for medical appointment booking system deployed on Google Cloud",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "auth_url",
      "value": "https://auth-npeev5arbq-uc.a.run.app",
      "type": "string"
    },
    {
      "key": "patients_url",
      "value": "https://patients-npeev5arbq-uc.a.run.app",
      "type": "string"
    },
    {
      "key": "doctors_url",
      "value": "https://doctors-npeev5arbq-uc.a.run.app",
      "type": "string"
    },
    {
      "key": "appointments_url",
      "value": "https://appointments-npeev5arbq-uc.a.run.app",
      "type": "string"
    },
    {
      "key": "payments_url",
      "value": "https://payments-npeev5arbq-uc.a.run.app",
      "type": "string"
    },
    {
      "key": "notifications_url",
      "value": "https://notifications-npeev5arbq-uc.a.run.app",
      "type": "string"
    },
    {
      "key": "reporting_url",
      "value": "https://reporting-npeev5arbq-uc.a.run.app",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "1. Health Checks",
      "item": [
        {
          "name": "Auth Health",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{auth_url}}/healthz",
              "host": [
                "{{auth_url}}"
              ],
              "path": [
                "healthz"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Patients Health",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{patients_url}}/healthz",
              "host": [
                "{{patients_url}}"
              ],
              "path": [
                "healthz"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Doctors Health",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{doctors_url}}/healthz",
              "host": [
                "{{doctors_url}}"
              ],
              "path": [
                "healthz"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Appointments Health",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{appointments_url}}/healthz",
              "host": [
                "{{appointments_url}}"
              ],
              "path": [
                "healthz"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Payments Health",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{payments_url}}/healthz",
              "host": [
                "{{payments_url}}"
              ],
              "path": [
                "healthz"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Notifications Health",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{notifications_url}}/healthz",
              "host": [
                "{{notifications_url}}"
              ],
              "path": [
                "healthz"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "2. E2E Appointment Booking Flow",
      "item": [
        {
          "name": "Step 1: Create Appointment",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response has appointmentId\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('appointmentId');",
                  "    pm.collectionVariables.set('appointmentId', jsonData.appointmentId);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"appointmentId\": \"apt_{{$timestamp}}\",\n  \"patientId\": \"patient_123\",\n  \"doctorId\": \"doctor_456\",\n  \"datetime\": \"2025-10-15T10:00:00Z\"\n}"
            },
            "url": {
              "raw": "{{appointments_url}}/appointments",
              "host": [
                "{{appointments_url}}"
              ],
              "path": [
                "appointments"
              ]
            },
            "description": "Creates a new medical appointment. This will trigger an event in the appointments topic."
          },
          "response": []
        },
        {
          "name": "Step 2: Process Payment",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response has paymentId\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('paymentId');",
                  "    pm.collectionVariables.set('paymentId', jsonData.paymentId);",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "// Wait 2 seconds to ensure appointment event was processed",
                  "setTimeout(function(){}, 2000);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"appointmentId\": \"{{appointmentId}}\",\n  \"amount\": 150.00,\n  \"currency\": \"USD\"\n}"
            },
            "url": {
              "raw": "{{payments_url}}/payments",
              "host": [
                "{{payments_url}}"
              ],
              "path": [
                "payments"
              ]
            },
            "description": "Processes payment for the appointment. This will trigger a payment.completed event."
          },
          "response": []
        },
        {
          "name": "Step 3: Verify Notifications (Check Logs)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{notifications_url}}/healthz",
              "host": [
                "{{notifications_url}}"
              ],
              "path": [
                "healthz"
              ]
            },
            "description": "The notifications service runs as a background subscriber. Check Cloud Logging to see notification events being processed.\n\nGo to: https://console.cloud.google.com/logs/query?project=proyecto-cloud-native\n\nSearch for: resource.labels.service_name=\"notifications\""
          },
          "response": []
        }
      ],
      "description": "Complete E2E flow: Create appointment → Process payment → Notifications triggered (check logs)"
    },
    {
      "name": "3. Additional API Tests",
      "item": [
        {
          "name": "Create Multiple Appointments (Load Test)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"appointmentId\": \"apt_{{$timestamp}}_{{$randomInt}}\",\n  \"patientId\": \"patient_{{$randomInt}}\",\n  \"doctorId\": \"doctor_{{$randomInt}}\",\n  \"datetime\": \"2025-10-{{$randomInt}}T{{$randomInt}}:00:00Z\"\n}"
            },
            "url": {
              "raw": "{{appointments_url}}/appointments",
              "host": [
                "{{appointments_url}}"
              ],
              "path": [
                "appointments"
              ]
            },
            "description": "Run this request multiple times to simulate load and test Pub/Sub message throughput"
          },
          "response": []
        }
      ]
    }
  ]
}
